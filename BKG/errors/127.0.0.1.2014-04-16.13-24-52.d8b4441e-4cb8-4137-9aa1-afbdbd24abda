(dp1
S'output'
p2
S"<type 'exceptions.IndexError'> list index out of range"
p3
sS'layer'
p4
S'/home/abhijeet/ITWS2/web2py/applications/BKG/controllers/default.py'
p5
sS'code'
p6
S'def index():\n    response.flash = T("Welcome to web2py!")\n    return dict(message=T(\'Hello World\'), var=request.vars)\n\ndef ace():\n    th=[]\n    key = request.get_vars["key"]\n    roll = request.get_vars["roll"]\n    rows = db(db.newtable.name1.startswith(key)).select()\n    #rows = db(db.newtable.id > 0).select()\n    json = \'{"names":[\'\n    i=0\n    for r in rows:\n        if(i!=0):\n             json += ","\n        json += \'"\'+r[\'name1\']+\'"\'\n        i+=1\n    json+= "]}"\n    return dict(j = json)  \n\ndef user():\n    return dict(form=auth())\n\n@cache.action()\ndef download():\n    return response.download(request, db)\n\n@auth.requires_signature()\ndef data():\n    return dict(form=crud())\n\ndef me():   \n    form = SQLFORM(db.t)\n    form.process()\n    return dict(form=form, rows = db(db.t.name.startswith(\'c\')).select())\n    \ndef login():\n    return dict(form = auth())\n      \ndef download():\n\treturn response.download(request, db)\n    \ndef found():\n    val = request.vars\n    c = val.keys()\n    a = val[c[0]]\n    a = a.lower()\n    a = a.strip()\n    print a\n    if db((db.Restaurants.name == a) | (db.Restaurants.city == a) | (db.Restaurants.area == a) | (db.Movie_Halls.area == a) | (db.Movie_Halls.name == a) | (db.Movie_Halls.city == a)).isempty():\n       return HTML(H1(P("Page not found"))).xml()\n    b = db((db.Restaurants.name == a) | (db.Restaurants.city == a) | (db.Restaurants.area == a)).select()\n    c = db((db.Movie_Halls.name == a) | (db.Movie_Halls.city == a) | (db.Movie_Halls.area == a)).select()\n    return dict(tab=b, mov=c)\n    \ndef info():\n    args = request.args\n    var = request.vars\n    arg = request.args[0]\n    print \'row:\',arg\n    b = db(db.Restaurants.id == arg).select()\n    c = db((db.Comments.rid == arg) & (db.Comments.table_name == \'Restaurants\')).select()\n    d = db(db.Images.rid == arg).select()\n    print arg,d\n    message = "Hi"\n    if c == [] or d == []:\n       message = "Nothing to Show"\n    return dict(arg = arg, record = b, comments = c, images = d, message = message)\n\ndef download():\n    return response.download(request, db)\n\n@auth.requires_login()    \ndef home_user():\n    response.flash = T("Welcome  " + auth.user.first_name)\n    \n    form_movie = SQLFORM(db.Movie_Halls,upload=URL(\'download\'))\n    form_restaurant = SQLFORM(db.Restaurants,upload=URL(\'download\'))\n    \n    if form_movie.process().accepted:\n    \tresponse.flash=T("entry inserted")\n    elif form_movie.errors:\n    \tresponse.flash=T("fill again")\n    else:\n    \tresponse.flash=T("welcome")\n    \t\n    if form_restaurant.process().accepted:\n    \tresponse.flash=T("entry inserted")\n    elif form_restaurant.errors:\n    \tresponse.flash=T("fill again")\n    else:\n    \tresponse.flash=T("welcome")\t\n    return dict(message=T(\'Hello  \' + auth.user.first_name),\n    \t\t\t\tform_movie=form_movie,\n    \t\t\t\tform_restaurant=form_restaurant)\n\n@auth.requires_login()    \ndef add_comment():\n    print request.args\n    form = SQLFORM(db.Comments)\n   # form.process()    \n    form.vars.user = auth.user.first_name\n    form.vars.rid = request.args[0]\n    form.vars.table_name = \'Restaurants\'\n    if form.process().accepted:\n    \tresponse.flash=T("entry inserted")\n    elif form.errors:\n    \tresponse.flash=T("fill again")\n    else:\n    \tresponse.flash=T("welcome")\n    return dict(form=form)\n\n@auth.requires_login()     \ndef add_image():\n    #print "image:",request.args[0]\n    form = SQLFORM(db.Images)    \n    form.vars.user = auth.user.first_name\n    #print request.args\n    form.vars.rid = request.args[0]\n    if form.process().accepted:\n    \tresponse.flash=T("entry inserted")\n    elif form.errors:\n    \tresponse.flash=T("fill again")\n    else:\n    \tresponse.flash=T("welcome")\n    return dict(form=form)\n    \ndef infom():\n    args = request.args\n    var = request.vars\n    arg = request.args[0]\n    print \'row:\',arg\n    b = db(db.Movie_Halls.id == arg).select()\n    c = db((db.Comments.rid == arg) & (db.Comments.table_name == \'Movie_Halls\')).select()\n    print arg\n    message = "Hi"\n    if c == []:\n       message = "Nothing to Show"\n    return dict(arg = arg, record = b, comments = c, message = message)\n    \n@auth.requires_login()    \ndef add_mcomment():\n    print request.args\n    form = SQLFORM(db.Comments)\n   # form.process()    \n    form.vars.user = auth.user.first_name\n    form.vars.rid = request.args[0]\n    form.vars.table_name = \'Movie_Halls\'\n    if form.process().accepted:\n    \tresponse.flash=T("entry inserted")\n    elif form.errors:\n    \tresponse.flash=T("fill" )\n    else:\n    \tresponse.flash=T("welcome")\n    return dict(form=form)\n\n\n\nresponse._vars=response._caller(infom)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/abhijeet/ITWS2/web2py/gluon/restricted.py", line 217, in restricted\n    exec ccode in environment\n  File "/home/abhijeet/ITWS2/web2py/applications/BKG/controllers/default.py", line 159, in <module>\n  File "/home/abhijeet/ITWS2/web2py/gluon/globals.py", line 372, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/abhijeet/ITWS2/web2py/applications/BKG/controllers/default.py", line 131, in infom\n    arg = request.args[0]\nIndexError: list index out of range\n'
p11
s.